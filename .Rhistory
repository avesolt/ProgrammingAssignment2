c(1,2,3,4)+c(0,10,100)
z*2+100
z*2+1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- ls()
old.dir <- getwd()
dir.create(testdir)
dir.create()
dir.create(old.dir)
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.pass("folder1")
file.path("folder1")
file.path("folder1","folder2")
?dir.create
dir.create("testdir2", "getwd",recursive = TRUE, "testdir3)
file.path("testdir2")
dir.create("testdir2", "getwd",recursive = TRUE, "testdir3")
+ file.path("testdir2")
dir.create("testdir2")
dir.create(filepath("testdir2","testdir3"), recursive = TRUE)
dir.create(file.path("testdir2","testdir3"), recursive = TRUE)
setwd(old.dir)
1:20
pi:10
15:1
":"
?":"
seq(1,20)
seq(0,10,by=0.5)
seq(5,10, length=30)
my_seq <- seq(5,10, length=30)
length(my_seq)
l:length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep((0,times=10),(1,times=10),(2,times=10))
rep(c(0,1,2), times=10)
rep(c(0,1,2),each=10)
num.vect <- (0.5, 55, -10, 6)
num.vect <- c(0.5, 55, -10, 6)
?c
num.vect <- c(0.5,55,-10,6)
info()
num.vect<-c(0.5,55,-10,6)
c(0.5,55,-10,6)
num_vect <- c(0.5, 55, -10, 6)
tf <- c(num.vect<1)
tf <- num_vect <1
tf
num_vect>=6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse =" ")
my_name <- c(my_char, "Tamara")
my_name
paste(my_name, collapse" ")
paste(my_name, collapse=" ")
paet("Hello", "world!", sep= " ")
paste("Hello", "world!", sep= " ")
paste("Hello", "world!", sep= "")
paste(c(1:3),c("X","Y","2"), sep="")
paste(1:3,c("X","Y","2"), sep="")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep ="-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep (NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na, TRUE)
sum(my_na)
my_data
0/0
Inf/Inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x [!is.na(x)]
y
y[y > 0]
x[x > 0]
x{!is.na(x) & x > 0}
x[!is.na(x) & x > 0]
c(3,5,7)
[c(3,5,7)]
info()
[x, c(3,5,7)]
help()
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c (foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4<5)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- (data = my_vector, nrow = 4, ncol = 5)
my_matrix2 <- (data = 1:20, nrow = 4, ncol = 5)
my_matrix2 <- (1:20, nrow = 4, ncol = 5)
my_matrix2 <- (nrow = 4, ncol = 5)
my_matrix2 <- matrix (data = 1:20, nrow = 4, ncol = 5)
identical (my_matrix, my_matrix2)
patients = c(Bill, Gina, Kelly, Sean)
atients = c("Bill", "Gina", "Kelly", "Sean")
patients = c("Bill", "Gina", "Kelly", "Sean")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data\
my_data
class(my_data)
cnames <- ("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames,my_data)
colnames(my_data,cnames)
colnames(my_data)
colnames("my_data", "cnames")
colnames(my_data, cnames)
colnames(cnames,my_data)
colnames(my_data) <- cnames
my_data
add2 <- function(x,y) {
x + y
}
add(3,5)
add2(3,5)
above <- function(x,n) {
use <- x > n
x[use]
}
x <- 1:20
above(x,12)
above <- function(x,10) {
use <- x > n
x[use]
}
above <- function(x,10) {
use <- x > n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
mean[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
View(add2)
View(add2)
View(add2)
View(add2)
View(add2)
?swirl
??swirl
swirl
swirl::restart()
swirl::main
swirl::swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
! 5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 | 3.9
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(>7)
which('.7')
which(c(.7))
which(c(>7))
which(c(TRUE))
which(c(ints >7))
?which
which(ints>7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function <- function(x) {
x
}
submit()
sumbit(boring_function)
x
submit()
source('/var/folders/b_/2qw8ww7n4fv5s5mtx7r01blr0000gn/T//RtmpYZZKDN/boring_function.R')
submit()
boring_function(x)
boring_function(3)
?submit
boring_function('My first function!')
boring_function()
boring_function
submit()
?submit
my_mean(c(4,5,10))
?submit
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num =5)
remainder(4, div = 2)
args(remainder)
?submit
?submit
?submit
?submit
?submit
evaluate(rnorm, dat)
evaluate(sd, dat)
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x), c(8, 4, 0))
evaluate(function(x) c(8, 4, 0))
evaluate(function(x = 1) c(8, 4, 0))
evaluate(function(x){x = 1} c(8, 4, 0))
evaluate(function(x){x = 1}, c(8, 4, 0))
evaluate(function(x){s = 1}, c(8, 4, 0))
evaluate(s = 1, c(8, 4, 0))
evaluate(s[1], c(8, 4, 0))
evaluate(c = 1, c(8, 4, 0))
evaluate(function(x){x=c[1]}, c(8, 4, 0))
evaluate(function(x){x = c[1]}, c(8, 4, 0))
evaluate(c[1], c(8, 4, 0))
evaluate(function(x = c[1]), c(8, 4, 0))
evaluate(function(x=c[1]), c(8, 4, 0))
evaluate(function(x[1]), c(8, 4, 0))
evaluate(function(x) {x[1]}), c(8, 4, 0))
evaluate(function(x) {x[1]}) c(8, 4, 0))
evaluate(function(x){x[c(1)]},c(8,4,0))
evaluate(function(x){x[c(3)]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?pate
?paste
paste("Programming", "is", "fun!")
?submit
telegram("Hello!")
?submit
?submit
mad_libs(place = "the USA", adjective = "good", noun = "dog")
?submit
?sumbit
?sumbit
?submit
?submit
?submit
?submit
?submit
?submit
"I" %p% "love" %p% "R!"
swirl:swirl
swirl
swirl::swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarter(t2)
quarters(t2)
t3 <- "october 17, 1986 08:24"
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
d1 <- Sys.Date()
class (d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(t2)
weekdays(d1)
months(t1)
quartesrs(t2)
quarters(t2)
t3 <_ "October 17, 1986 08:24"
t3 <- "October 17, 1986 08:24"
t4 <-  strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1.
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
swirl::swirl()
head(flags)
dim(flags)
viewinfo(flags)
viewinfo(flag)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
cls_vect
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head()
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shape, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unigue(c(3, 4, 5, 5, 5, 6, 6))
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- (flags, unique())
unique_vals <- (flags, unique)
k[p]
unique_vals <- (flags, unique)
?unique
unique_vals <- lapply(flags, unique)
unique_vals
length_uv <- sapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
library(datasets)
data(iris)
library(datasets)
data(iris)
?iris
head(iris)
tapply(Sepal.Length, virginica, print)
?which
which("Sepal.Length", "Species" == "virginica")
which(iris("Sepal.Length", "Species" == "virginica"))
virginica_mean <- tapply(iris$Species, iris$Sepal.Length, mean)
warnings()
tapply(iris$Species, iris$Sepal.Length, mean, na.rm= TRUE)
apply(iris, 1, mean)
apply(iris, 1, mean)
apply(iris, 2, mean)
?apply
virginica <- which(iris, "Species" == "virginica")
virginica <- subset(iris, "Species" == "virginica")
virginica
virginica <- subset("Species" == "virginica")
?tapply
tapply(iris$Sepal.Length, iris$virginica, mean)
tapply(iris$Sepal.Length, iris$virginica, mean)
library(datasets)
data(mtcars)
View(virginica)
View(virginica)
head(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(iris$Sepal.Length, iris$Species), mean)
tapply(iris$Sepal.Length, iris$Species, mean)
debug(ls)
ls
c <- tapply(mtcars$mpg, mtcars$cyl, mean)
c
ok
2
2
library(datasets)
data(mtcars)
?minus
tapply(mtcars$mpg, mtcars$cyl, mean)
c <- tapply(mtcars$mpg, mtcars$cyl, mean)
c[, 1] - c[, 3]
?sum
tapply(c$4, c$8, -)
tapply(c$4, c$8, compare)
tapply(c$4, c$8, sum)
debug()
26.66364 - 15.10000
c[, 4] - c[,8]
c[, 1] - c[,3]
tapply(mtcars$hp, mtcars$cyl, mean)
c <- tapply(mtcars$hp, mtcars$cyl, mean)
c[,1] - c[,3]
tapply(c$4, c$8, diff)
class(c)
as.data.frame(c)
tapply(mtcars$hp, mtcars$cyl == 4, mean)
tapply(mtcars$hp, mtcars$cyl[4], mean)
subset(c[,1])
c <- numeric()
c <- sapply(mtcars$hp, mtcars$cyl, mean)
c <- tapply(mtcars$hp, mtcars$cyl, mean)
dim(c)
c[1] - c[3]
as.array(c)
as.list(c)
?mapply
tapply(mtcars$hp, mtcars$cyl == 4, mean) - tapply(mtcars$hp, mtcars$cyl == 8, mean)
debug(tapply)
tapply
tapply(mtcars$hp, mtcars$cyl, diff)
stop()
esc
escape
tapply(mtcars$hp, mtcars$cyl, diff)
stop(debug())
library(datasets)
data(mtcars)
tapply(mtcars$hp, mtcars$cyl, diff)
tapply(mtcars$hp, mtcars$cyl, diff)
with(mtcars, tapply(mpg, cyl, mean))
mean(mtcars[mtcars$cyl == "8",]$hp) - mean(mtcars[mtcars$cyl == "4",]$hp)
new <- tapply(mtcars$hp, mtcars$cyl, mean)
round(abs(new[3]-new[1]))
tapply(mtcars$hp, mtcars$cyl, abs)
